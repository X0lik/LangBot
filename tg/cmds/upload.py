import os
from datetime import datetime
import logging
from typing import List
from files.chunk import getChunks
from files.pdf import readPDF
from files.docx import readDOCX
from database.db import DB

class FileUploadError(Exception):
    """–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤"""
    pass


class UnsupportedFileTypeError(FileUploadError):
    """–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞"""

    def __init__(self, file_ext: str, allowed_extensions: List[str]):
        self.file_ext = file_ext
        self.allowed_extensions = allowed_extensions
        super().__init__(f"Unsupported file type: {file_ext}")


class FileTooLargeError(FileUploadError):
    """–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
    pass


class FileUploader:
    def __init__(self, bot, upload_folder='uploads', max_size_mb=10):
        self.bot = bot
        self.upload_folder = upload_folder
        self.max_size = max_size_mb * 1024 * 1024  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –±–∞–π—Ç—ã
        self.allowed_extensions = ['.txt', '.pdf', '.docx']  # –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        self.logger = logging.getLogger(__name__)

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs(self.upload_folder, exist_ok=True)

    def get_supported_formats(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏"""
        return ", ".join(self.allowed_extensions)

    def handle_upload_command(self, message) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /upload"""
        self.bot.reply_to(
            message,
            f"üì§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.\n"
            f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: {self.get_supported_formats()}\n"
            f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {self.max_size // (1024 * 1024)} –ú–ë"
        )

    def is_file_allowed(self, file_name: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"""
        return any(file_name.lower().endswith(ext) for ext in self.allowed_extensions)

    def validate_file(self, message) -> None:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–∞–π–ª –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º"""
        file_name = message.document.file_name
        file_size = message.document.file_size

        if not self.is_file_allowed(file_name):
            raise UnsupportedFileTypeError(
                file_ext=os.path.splitext(file_name)[1],
                allowed_extensions=self.allowed_extensions
            )

        if file_size > self.max_size:
            raise FileTooLargeError(
                f"File size {file_size} exceeds maximum allowed {self.max_size}"
            )

    def save_chunks_to_file(self, chunks: List[str], file_path: str) -> None:
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —á–∞–Ω–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ—Ç–ª–∞–¥–∫–∏)"""
        chunk_dir = os.path.join(os.path.dirname(file_path), "chunks")
        os.makedirs(chunk_dir, exist_ok=True)

        for i, chunk in enumerate(chunks, 1):
            chunk_file = os.path.join(chunk_dir, f"chunk_{i}.txt")
            with open(chunk_file, 'w', encoding='utf-8') as f:
                f.write(chunk)

    def handle_document(self, message) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        try:
            file_name = message.document.file_name
            self.validate_file(message)

            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–æ–≤ Telegram
            file_info = self.bot.get_file(message.document.file_id)
            downloaded_file = self.bot.download_file(file_info.file_path)

            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_folder = os.path.join(self.upload_folder, str(message.chat.id))
            os.makedirs(user_folder, exist_ok=True)

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            new_filename = f"{file_name}"
            file_path = os.path.join(user_folder, new_filename)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open(file_path, 'wb') as new_file:
                new_file.write(downloaded_file)

            # –ï—Å–ª–∏ —Ñ–∞–π–ª —Ç–µ–∫—Å—Ç–æ–≤—ã–π (.txt) ‚Äî —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞–Ω–∫–∏
            if file_name.lower().endswith('.txt'):
                with open(file_path, 'r', encoding='utf-8') as f:
                    text = f.read()
                    chunks = getChunks(text)  # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞–Ω–∫–∏ –ø–æ 2048 —Å–∏–º–≤–æ–ª–æ–≤
                    DB.WriteChunks(message.chat.id, file_name, chunks)
            elif file_name.lower().endswith(".pdf"):
                text = readPDF(file_path)
                chunks = getChunks(text)  # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞–Ω–∫–∏ –ø–æ 2048 —Å–∏–º–≤–æ–ª–æ–≤
                DB.WriteChunks(message.chat.id, file_name, chunks)
            elif file_name.lower().endswith(".docx"):
                text = readDOCX(file_path)
                chunks = getChunks(text)  # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞–Ω–∫–∏ –ø–æ 2048 —Å–∏–º–≤–æ–ª–æ–≤
                DB.WriteChunks(message.chat.id, file_name, chunks)

            os.remove(file_path)

            self.bot.reply_to(message, f"‚úÖ –§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∏ —Ä–∞–∑–±–∏—Ç –Ω–∞ —á–∞–Ω–∫–∏")
            self.logger.info(f"User {message.chat.id} uploaded file: {file_path}")

        except UnsupportedFileTypeError as e:
            self.logger.warning(f"Unsupported file type: {e.file_ext}")
            self.bot.reply_to(
                message,
                f"‚ùå –§–æ—Ä–º–∞—Ç {e.file_ext} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: {self.get_supported_formats()}\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤."
            )

        except FileTooLargeError:
            self.logger.warning(f"File too large: {message.document.file_size}")
            self.bot.reply_to(
                message,
                f"‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {self.max_size // (1024 * 1024)} –ú–ë"
            )

        except Exception as e:
            self.logger.error(f"Unexpected error during file upload: {str(e)}", exc_info=True)
            self.bot.reply_to(
                message,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )